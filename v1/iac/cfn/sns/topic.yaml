AWSTemplateFormatVersion: "2010-09-09"
Description: "Create a new SNS Topic. - (v1.0.0)"
Parameters:
  # General Configuration
  InfrastructureName:
    Type: "String"
    Description: "A name used to differentiate this infrastructure from other existing infrastructure."
    Default: "main"
  TopicBaseName:
    Type: "String"
    Description: "The base name of the topic."
    AllowedPattern: "[a-zA-Z0-9-_]+"
  DisplayName:
    Type: "String"
    Description: "A developer-defined string that can be used to identify this SNS topic."
    MaxLength: 10
    Default: "CMS"
  # FIFO Configuration
  EnableFifo:
    Type: "String"
    Description: "Enable topic FIFO features?"
    AllowedValues:
    - "true"
    - "false"
    Default: "false"
  EnableContentBasedDeduplication:
    Type: "String"
    Description: "Enable topic FIFO features?"
    AllowedValues:
    - "true"
    - "false"
    Default: "false"
  # Tags
  TagEnvironment:
    Type: "String"
    Description: "What is the environment tag?"
Conditions:
  EnableFifo: !Equals [ !Ref EnableFifo, "true" ]
Resources:
  Topic:
    Type: "AWS::SNS::Topic"
    Properties:
      ContentBasedDeduplication: !If [ EnableFifo, !Ref EnableContentBasedDeduplication, !Ref "AWS::NoValue" ]
      DisplayName: !Ref DisplayName
      FifoTopic: !Ref EnableFifo
      KmsMasterKeyId: !Sub "{{resolve:ssm:/kms/${InfrastructureName}/key/sns/arn}}"
      TopicName: !If [ EnableFifo, !Sub "${TopicBaseName}-${TagEnvironment}.fifo", !Sub "${TopicBaseName}-${TagEnvironment}" ]
      Tags:
      - Key: "Name"
        Value: !Ref "AWS::StackName"
      - Key: "application"
        Value: !Ref "AWS::StackName"
      - Key: "contact-email"
        Value: !Sub "{{resolve:ssm:/account/${InfrastructureName}/tag/contact-email}}"
      - Key: "customer"
        Value: !Sub "{{resolve:ssm:/account/${InfrastructureName}/tag/customer}}"
      - Key: "environment"
        Value: !Sub "{{resolve:ssm:/account/${InfrastructureName}/tag/environment}}"
      - Key: "team"
        Value: !Sub "{{resolve:ssm:/account/${InfrastructureName}/tag/team}}"
  TopicPolicy:
    Type: "AWS::SNS::TopicPolicy"
    Properties:
      PolicyDocument:
        Id: !Sub "${TopicBaseName}-${TagEnvironment}"
        Version: "2012-10-17"
        Statement:
        - Sid: !Sub "${TopicBaseName}-${TagEnvironment}-events-access"
          Effect: "Allow"
          Principal:
            Service: "events.amazonaws.com"
          Action:
          - "sns:Publish"
          Resource: "*"
        - Sid: !Sub "${TopicBaseName}-${TagEnvironment}-general-access"
          Effect: "Allow"
          Principal:
            AWS: "*"
          Action:
          - "sns:GetTopicAttributes"
          - "sns:SetTopicAttributes"
          - "sns:AddPermission"
          - "sns:RemovePermission"
          - "sns:DeleteTopic"
          - "sns:Subscribe"
          - "sns:ListSubscriptionsByTopic"
          - "sns:Publish"
          - "sns:Receive"
          Resource: !Ref Topic
          Condition:
            StringEquals:
              AWS:SourceOwner: !Ref "AWS::AccountId"
      Topics:
      - !Ref Topic
  ParamTopicArn:
    Type: "AWS::SSM::Parameter"
    Properties:
      DataType: "text"
      Description: "The SNS topic ARN."
      Name: !Sub "/sns/${InfrastructureName}/topic/${TopicBaseName}/${TagEnvironment}/arn"
      Tier: "Standard"
      Type: "String"
      Value: !Ref Topic
      Tags:
        Name: !Ref "AWS::StackName"
        application: !Ref "AWS::StackName"
        customer: !Sub "{{resolve:ssm:/account/${InfrastructureName}/tag/customer}}"
        contact-email: !Sub "{{resolve:ssm:/account/${InfrastructureName}/tag/contact-email}}"
        environment: !Ref TagEnvironment
        team: !Sub "{{resolve:ssm:/account/${InfrastructureName}/tag/team}}"
  ParamTopicName:
    Type: "AWS::SSM::Parameter"
    Properties:
      DataType: "text"
      Description: "The SNS topic name."
      Name: !Sub "/sns/${InfrastructureName}/topic/${TopicBaseName}/${TagEnvironment}/name"
      Tier: "Standard"
      Type: "String"
      Value: !GetAtt Topic.TopicName
      Tags:
        Name: !Ref "AWS::StackName"
        application: !Ref "AWS::StackName"
        customer: !Sub "{{resolve:ssm:/account/${InfrastructureName}/tag/customer}}"
        contact-email: !Sub "{{resolve:ssm:/account/${InfrastructureName}/tag/contact-email}}"
        environment: !Ref TagEnvironment
        team: !Sub "{{resolve:ssm:/account/${InfrastructureName}/tag/team}}"
Outputs:
  TopicArn:
    Description: "The ARN of this topic."
    Value: !Ref Topic
    Export:
      Name: !Sub "${AWS::StackName}-TopicArn"
  TopicName:
    Description: "The name of this topic."
    Value: !GetAtt Topic.TopicName
    Export:
      Name: !Sub "${AWS::StackName}-TopicName"
  ParamTopicArn:
    Description: "The ARN of this topic SSM parameter."
    Value: !Ref ParamTopicArn
    Export:
      Name: !Sub "${AWS::StackName}-ParamTopicArn"
  ParamTopicName:
    Description: "The name of this topic SSM parameter."
    Value: !Ref ParamTopicName
    Export:
      Name: !Sub "${AWS::StackName}-ParamTopicName"
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: "General Configuration"
      Parameters:
      - InfrastructureName
      - TopicBaseName
      - DisplayName
    - Label:
        default: "FIFO Configuration"
      Parameters:
      - EnableFifo
      - EnableContentBasedDeduplication
    - Label:
        default: "Tag Configuration"
      Parameters:
      - TagEnvironment
    ParameterLabels:
      # General Configuration
      InfrastructureName:
        default: "Infrastructure Name:"
      TopicBaseName:
        default: "Topic Base Name:"
      DisplayName:
        default: "Display Name:"
      # FIFO Configuration
      EnableFifo:
        default: "Enable FIFO:"
      EnableContentBasedDeduplication:
        default: "Enable Content Based Deduplication:"
      # Tags
      TagEnvironment:
        default: "Environment:"